{
	"info": {
		"_postman_id": "a31d4157-fae1-4fac-a625-a7539a535e1b",
		"name": "Second hand",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25332088"
	},
	"item": [
		{
			"name": "POST/auth/register/seller",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"randomEmail\", _.$randomEmail);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();var email = responseJson.email;pm.environment.set(\"email\", email)\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "full_name",
							"value": "seller",
							"type": "text"
						},
						{
							"key": "email",
							"value": "{{$randomEmail}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123456",
							"type": "text"
						},
						{
							"key": "phone_number",
							"value": "085155305675",
							"type": "text"
						},
						{
							"key": "address",
							"value": "jakarta",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseurl}}auth/register",
					"host": [
						"{{baseurl}}auth"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST/auth/login/seller",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();var access_token = responseJson.access_token;pm.environment.set(\"access_token\", access_token)\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}auth/login",
					"host": [
						"{{baseurl}}auth"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST/seller/product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();var id = responseJson.id;pm.environment.set(\"id_product_seller\", id)\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "access_token",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "ciki komos",
							"type": "text"
						},
						{
							"key": "description",
							"value": "ciki komo",
							"type": "text"
						},
						{
							"key": "base_price",
							"value": "5000",
							"type": "text"
						},
						{
							"key": "category_ids",
							"value": "4",
							"type": "text"
						},
						{
							"key": "location",
							"value": "jakarta",
							"type": "text"
						},
						{
							"key": "image",
							"type": "file",
							"src": "/C:/Users/Fadel/Downloads/asd.png"
						}
					]
				},
				"url": {
					"raw": "{{baseurl}}seller/product",
					"host": [
						"{{baseurl}}seller"
					],
					"path": [
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET/seller/product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "access_token",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}seller/product",
					"host": [
						"{{baseurl}}seller"
					],
					"path": [
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET/seller/product/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "access_token",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{baseurl}}seller/product/{{id_product_seller}}",
					"host": [
						"{{baseurl}}seller"
					],
					"path": [
						"product",
						"{{id_product_seller}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST/auth/register/buyer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"randomEmail\", _.$randomEmail);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();var email = responseJson.email;\r",
							"pm.environment.set(\"emailbuyer\", email);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "full_name",
							"value": "fadel buyer",
							"type": "text"
						},
						{
							"key": "email",
							"value": "{{$randomEmail}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123456",
							"type": "text"
						},
						{
							"key": "phone_number",
							"value": "085155305675",
							"type": "text"
						},
						{
							"key": "address",
							"value": "jakarta",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseurl}}auth/register",
					"host": [
						"{{baseurl}}auth"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST/auth/login/buyer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();var access_token = responseJson.access_token;pm.environment.set(\"access_token_buyer\", access_token)\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{emailbuyer}}\",\r\n  \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}auth/login",
					"host": [
						"{{baseurl}}auth"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET/buyer/product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "access_token_buyer",
						"value": "{{access_token_buyer}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{baseurl}}buyer/product?status&category_id&search&page=1&per_page=1",
					"host": [
						"{{baseurl}}buyer"
					],
					"path": [
						"product"
					],
					"query": [
						{
							"key": "status",
							"value": null
						},
						{
							"key": "category_id",
							"value": null
						},
						{
							"key": "search",
							"value": null
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "per_page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET/buyer/product/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}buyer/product/{{id_product_seller}}",
					"host": [
						"{{baseurl}}buyer"
					],
					"path": [
						"product",
						"{{id_product_seller}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST/buyer/order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();var id = responseJson.id;pm.environment.set(\"id_product_buyer\", id)\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "access_token",
						"value": "{{access_token_buyer}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"product_id\": {{id_product_seller}},\r\n  \"bid_price\": 5000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}buyer/order",
					"host": [
						"{{baseurl}}buyer"
					],
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET/buyer/order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "access_token",
						"value": "{{access_token_buyer}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}buyer/order",
					"host": [
						"{{baseurl}}buyer"
					],
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET/buyer/order/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "access_token",
						"value": "{{access_token_buyer}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}buyer/order/{{id_product_buyer}}",
					"host": [
						"{{baseurl}}buyer"
					],
					"path": [
						"order",
						"{{id_product_buyer}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT/buyer/order/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "access_token",
						"value": "{{access_token_buyer}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"bid_price\": 1000000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}buyer/order/{{id_product_buyer}}",
					"host": [
						"{{baseurl}}buyer"
					],
					"path": [
						"order",
						"{{id_product_buyer}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL/buyer/order/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "access_token",
						"value": "{{access_token_buyer}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}buyer/order/{{id_product_buyer}}",
					"host": [
						"{{baseurl}}buyer"
					],
					"path": [
						"order",
						"{{id_product_buyer}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL/seller/product{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"status code name has string\", function(){\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is under 2000 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "access_token",
						"value": "{{access_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}seller/product/{{id_product_seller}}",
					"host": [
						"{{baseurl}}seller"
					],
					"path": [
						"product",
						"{{id_product_seller}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "userEmail",
			"value": ""
		}
	]
}